class Solution {

    public int[] search(int[] nums , int target , int low , int high){
        int[] ans = {-1,-1};
        int mid = (low+high)/2;

        if(low>high){
            return ans;
        }

        if(nums[mid]==target){
            // what we have to return check 
            int b= mid;
            while(b>0){
                if(b > 0 && nums[b]==nums[b-1]){
                    b--;
                }
                else{
                    break;
                }
            }
             ans[0]=b;
             b=mid;
            while(b<nums.length-1){
                if(b<nums.length-1 && nums[b]==nums[b+1]){
                    b++;
                }
                else{
                    break;
                }
            }
            ans[1]=b;

            return ans;
}

        if(nums[mid]>target){
            // what we have to do
           return  search(nums, target , low ,mid-1);
        }
        else{
            return search(nums,target , mid+1 , high);
        }

    }
    public int[] searchRange(int[] nums, int target) {

       return search(nums , target , 0 , nums.length-1);
    }
}
