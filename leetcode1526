// class Solution {
//     private boolean existZero(int[] arr){
//         for(int  i= 0 ;i<arr.length ; i++){
//              if(arr[i]!=0){
//                 return true;
//              }
//         }
//         return false;

//     }
//     public int minNumberOperations(int[] arr) {

//         int op = 0;
//         int p1 =0;
//         int p2 =0;
//         while(existZero(arr)){
//             op++;
//             while(p1<arr.length && arr[p1]>0){
//                 arr[p1]=arr[p1]-1;
//                 p1++;
//             }
//             while(p2<arr.length &&  arr[p2]==0){
//                 p2++;
//             }
//             p1=p2; 
//         }

//         return op;
        
//     }
// }

class Solution {
    public int minNumberOperations(int[] target) {
        final int n=target.length;
        int ans=target[0];
        for(int i=1; i<n; i++)
            ans+=Math.max(target[i]-target[i-1], 0);
        return ans;
    }
}
