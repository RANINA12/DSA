class Solution {
    public List<String> letterCombinations(String digits) {

        HashMap<Integer,String> map2 = new HashMap<>();
        List<String> li1= new ArrayList<>(); 
         List<String> result= new ArrayList<>(); 

        map2.put(2, "abc");
        map2.put(3, "def");
        map2.put(4, "ghi");
        map2.put(5, "jkl");
        map2.put(6, "mno");
        map2.put(7, "pqrs");
        map2.put(8, "tuv");
        map2.put(9, "wxyz");

        for(int  i=0 ; i<digits.length();i++){
          int digit = digits.charAt(i)-'0';
          li1.add(map2.get(digit));
        }
        if(! li1.isEmpty()){
        generate(li1 ,0,"",result);
         
        }
        return result;
        
    }

    private static void generate(List<String> parts ,int index , String current , List<String> result ){
        if(index == parts.size()){
            result.add(current);
            return;
        }
        for(char c: parts.get(index).toCharArray()){
            generate(parts , index+1, current+c,result);
        }
    }
}
